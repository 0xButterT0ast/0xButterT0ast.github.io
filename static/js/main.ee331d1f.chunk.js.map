{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","getMaxEntries","getNumTickets","currentEntries","cost","error","dataReducer","getPlayerTickets","getWinners","numWinners","raffleLive","raffleLives","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","ethereum","selectedAddress","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerSmall","SpacerMedium","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLink","img","MintPageLink","App","useDispatch","useSelector","useState","claimingNft","setClaimingNft","info","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","CONTRACT_ADDRESS_NFT","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","PRIZE","LIVE","RAFFLE","SET_RAFFLE","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","tickets","join","winners","tokenCount","rafflePrize","numTickets","input","len","getPrizes","prizeResponse","prizes","style","padding","backgroundColor","borderRadius","boxShadow","fontSize","fontFamily","textAlign","color","target","href","length","substring","fontWeight","Number","onClick","e","preventDefault","abiResponse","abi","window","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","enterRaffle","send","once","err","message","then","receipt","claimNFTs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee331d1f.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  getMaxEntries: 0,\n  getNumTickets: 0,\n  currentEntries: 0,\n\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        getPlayerTickets: action.payload.getPlayerTickets,\n        getMaxEntries: action.payload.getMaxEntries,\n        getWinners: action.payload.getWinners,\n        numWinners: action.payload.numWinners,\n        raffleLive: action.payload.raffleLives,\n        getNumTickets: action.payload.getNumTickets,\n        currentEntries: action.payload.currentEntries,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let getPlayerTickets = await store\n        .getState()\n        .blockchain.smartContract.methods.getPlayerTickets(ethereum.selectedAddress)\n        .call();\n\n        let getMaxEntries = await store\n        .getState()\n        .blockchain.smartContract.methods.getMaxEntries(ethereum.selectedAddress)\n        .call();\n\n      let getWinners = await store\n        .getState()\n        .blockchain.smartContract.methods.getWinners()\n        .call();\n\n        let numWinners = await store\n        .getState()\n        .blockchain.smartContract.methods.numWinners()\n        .call();\n\n        let raffleLive = await store\n        .getState()\n        .blockchain.smartContract.methods.raffleLive()\n        .call();\n\n        let getNumTickets = await store\n        .getState()\n        .blockchain.smartContract.methods.getNumTickets()\n        .call();\n\n        let currentEntries = await store\n        .getState()\n        .blockchain.smartContract.methods.currentEntries(ethereum.selectedAddress)\n        .call();\n\n      dispatch(\n        fetchDataSuccess({\n          getPlayerTickets, getWinners, numWinners, getMaxEntries, raffleLive, getNumTickets, currentEntries,\n\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing space between components\nexport const SpacerXLarge = styled.div`\n  height: 200px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport Web3 from \"web3\";\n\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--secondary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 275px;\n  @media (min-width: 767px) {\n    width: 600px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n  \n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nexport const MintPageLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [info, setInfo] = useState('');\n  const [feedback, setFeedback] = useState(`Each Toker grants you access to two tickets.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    CONTRACT_ADDRESS_NFT: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const [RAFFLE, SET_RAFFLE] = useState({\n  PRIZE: \"\",\n  LIVE: \"\",\n  });\n  \n\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Grabbin' yo tickets!`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .enterRaffle(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        gasLimit: String(totalGasLimit),\n        maxPriorityFeePerGas: null,\n        maxFeePerGas: null,\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      // if error\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(err.message);\n        setClaimingNft(false);\n      })\n      // if success\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `Your tickets have been purchased! Refresh the page if your tickets don't show.`\n        );\n\n        //return state to \"re-buy\"\n        setClaimingNft(false);\n\n        //once bought, update playerTickets\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 25) {\n      newMintAmount = 25;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  const arr = [data.getPlayerTickets];\n  const tickets = arr.join(\",\");\n\n  const winningTickets = [data.getWinners];\n  const winners = winningTickets.join(\",\");\n  \n  const totalTokers = [data.tokenCount];\n  const tokers = totalTokers.join(\",\")\n\n  //const addy = (ethereum.selectedAddress)\n  const numWinners = (data.numWinners)\n  const rafflePrize = (RAFFLE.PRIZE)\n  const numTickets = (data.getNumTickets)\n  const currentEntries = (data.currentEntries)\n\n  console.log({tickets});\n  console.log({winners});\n  //console.log({addy});\n  console.log({numWinners});\n  console.log({rafflePrize});\n  console.log({numTickets});\n  console.log({currentEntries});\n\n\n  const getPrizes = async () => {\n  const prizeResponse = await fetch(\"/config/rewards.json\");\n\n    const prizes = await prizeResponse.json();\n    SET_RAFFLE(prizes);\n  };\n\n  useEffect(() => {\n    getPrizes();\n  }, []);\n\n\n\n\n  return (\n    <s.Screen>\n      \n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 10, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg_2.png\" : null} \n      >\n\n        <ResponsiveWrapper flex={1} style={{ padding: 18 }} test>\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 18,\n              borderRadius: 50,\n              //border: \"4px double var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            \n            <s.TextDescription\n              style={{\n                fontSize: 55,\n                fontFamily: \"Bangers\",\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              \n        </s.TextDescription>\n\n           <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n                }}\n            >\n              Contract Address:<br />\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n\n            </s.TextDescription>\n            \n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 25,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              \n            </s.TextTitle>\n            \n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  OH SNAP.. Something Went Wrong.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  ...Raffles might not be active.\n                </s.TextDescription>\n                <s.SpacerSmall />\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  {info}\n                  \n                  You must have at least one Midnight Toker in your wallet to participate.\n                  <br />\n                  If you do not have any please visit the \n                  <MintPageLink a href=\"https://www.themidnighttokersclub.com/index.html\"> Mint Page\n                  </MintPageLink>\n                  <br />\n\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL}.\n                </s.TextTitle>\n                \n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      \n                      {feedback}\n                      <br />\n\n                      You can buy a maximum of {data.getMaxEntries} tickets. <br />\n                      <br />\n\n                      Is Raffle Active? {RAFFLE.LIVE} <br />\n                      Raffle Prize is: { RAFFLE.PRIZE} <br />\n                      <br />\n                      You own { data.currentEntries} out of { data.getNumTickets} tickets. <br />\n                      Your Tickets: { tickets} <br />\n                      Winning Tickets: { winners} <br />\n                      Total Winners: { data.numWinners} <br />\n                    </s.TextDescription>\n                    \n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )} \n          </s.Container>\n        </ResponsiveWrapper>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}