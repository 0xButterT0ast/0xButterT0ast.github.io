{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","getPlayerTickets","cost","error","dataReducer","getWinners","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","ethereum","selectedAddress","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","StyledHeaderButton","ResponsiveWrapper","StyledLogo","img","App","useDispatch","useSelector","win","useState","claimingNft","setClaimingNft","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","gettingWinners","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","tickets","join","winners","style","padding","backgroundColor","alt","src","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","href","Number","totalSupply","Tickets","onClick","e","preventDefault","abiResponse","abi","window","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","enterRaffle","send","to","from","value","once","err","then","receipt","claimNFTs","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d47c098f.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  getPlayerTickets: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        getPlayerTickets: (action.payload.getPlayerTickets),\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n              };\n\n    case \"WINNERS\":\n      return {\n        ...state,\n        loading: false,\n        getWinners: (action.payload.getWinners),\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n              };\n\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\nimport web3 from \"web3\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataWinners = (payload) => {\n  return {\n    type: \"WINNERS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\n\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let getPlayerTickets = await store\n        .getState()\n        .blockchain.smartContract.methods.getPlayerTickets(ethereum.selectedAddress)\n        .call()\n\n      dispatch(\n        fetchDataSuccess ({getPlayerTickets})\n        \n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  }; \n};\n\nexport const currentWinners = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let getWinners = await store\n        .getState()\n        .blockchain.smartContract.methods.getWinners()\n        .call()\n\n      dispatch(\n        fetchDataWinners ({getWinners})\n        \n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  }; \n};\n\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport { currentWinners } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport web3 from \"web3\"\nimport { Contract } from \"web3-eth-contract\";\n\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledHeaderButton = styled.button`\n  padding: 20px;\n  border-radius: 15%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 65px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: ;\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  \n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const win = useSelector((state) => state.win);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Claim your tickets NOW!`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  \n\n  \n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    \n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Collecting Yo ${CONFIG.Tickets}!`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .enterRaffle(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, we couldn't process your tickets, please try again.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `Congrats you grabbed some ${CONFIG.Tickets} ! Refresh the page to view your ticket numbers.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n    setMintAmount(newMintAmount);\n  };\n  \n\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const gettingWinners = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(currentWinners(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n\n\n\n\n\n\n\n  // tickets (getPlayerTickets)\n  const arr = [data.getPlayerTickets];\n\n  const tickets = arr.join(',')\n\n  console.log(tickets);\n\n\n\n\n  //Winners (getWinners)\n//0xc7914eC0FF1d4F65CB13Bb52C349c543Eec430CE\n  const winningTickets = [ data.getWinners ]\n\n  const winners = winningTickets.join(',')\n\n  console.log(winners);\n    \n\n  //\n\n\n\n\n\n\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  useEffect(() => {\n    gettingWinners();\n  }, [blockchain.account]);\n\n  \n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 20, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/raffle_bg.png\" : null}\n      >\n        <StyledLogo alt={\"logo\"} src={\"/config/images/spacer.png\"} />\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 50 }} test>\n          \n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 18,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n           >\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--secondary)\",\n              }}\n            >\n              <br />\n              <br />\n              <br />\n              <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n              <StyledHeaderButton> \n              <a href=\"https://www.themidnighttokersclub.com\"> HOME </a>\n              </StyledHeaderButton>       \n              <s.SpacerSmall></s.SpacerSmall> \n              <StyledHeaderButton>\n              <a href=\"https://www.themidnighttokersclub.com/index.html\"> MINT </a>\n              </StyledHeaderButton>\n              </s.Container>\n\n              <br />\n              \n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  No more tickets available.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can grab some {CONFIG.Tickets} next round!\n                </s.TextDescription>\n                <s.SpacerSmall />\n                \n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL}.\n                  <br />\n\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                \n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} networkc\n\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                 <s.TextDescription\n                                    style={{\n                                      textAlign: \"center\",\n                                      color: \"var(--title)\",\n                                      fontSize: 22,\n                                    }}\n                    >\n                            {}\n                      <br/>\n                 <s.TextTitle\n                                    style={{\n                                      textAlign: \"center\",\n                                      fontSize: 35,\n                                      fontWeight: \"\",\n                                      color: \"var(--accent-text)\",\n                                    }}\n                          >\n                 <s.TextDescription\n                            style={{ textAlign: \"center\",\n                              color: \"var(--accent-text)\" }}\n                >\n\n\n                  You need at least 1 Midnight Toker to participate! \n                  <br />\n                  Each Midnight Toker grants you access to 2 tickets!\n                  <br />\n                  <s.TextDescription \n                  style={{\n                                      textAlign: \"center\",\n                                      fontSize: 35,\n                                      fontWeight: \"bold\",\n                                      color: \"var(--accent-text)\",\n                                    }}\n                                    >\n                  Your Current Ticket Numbers:\n                  </s.TextDescription>\n                 <s.TextTitle\n                                    style={{\n                                      textAlign: \"center\",\n                                      fontSize: 26,\n                                      fontWeight: \"bold\",\n                                      color: \"var(--secondary\",\n               }}\n                >\n\n\n                  {tickets}\n                <br />\n\n \n\n\n                </s.TextTitle>\n                </s.TextDescription>\n\n                  Winning Raffle Number:\n\n                <br />\n              \n                 <s.TextTitle\n                                    style={{\n                                      textAlign: \"center\",\n                                      fontSize: 26,\n                                      fontWeight: \"bold\",\n                                      color: \"var(--secondary\",\n               }}\n                >\n                   {winners}\n               </s.TextTitle>\n                <br />                       \n\n                            \n                    </s.TextTitle>                                     \n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                       {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"CLAIMING TICKETS\" : \"BUY TICKETS\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n\n          \n            \n         \n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >         \n           \n          </s.TextDescription>\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n\n\n\n            \n\n\n\n  );\n}\n\n\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}